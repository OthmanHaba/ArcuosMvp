// <auto-generated />
using System;
using Arceus.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Arceus.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250918001845_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Arceus.Domain.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("account_type");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("balance");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("owner_id");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_accounts");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_accounts_owner_id");

                    b.HasIndex("OwnerId", "AccountType")
                        .IsUnique()
                        .HasDatabaseName("ix_accounts_owner_id_account_type");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("Arceus.Domain.Entities.Contractor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContractorType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("contractor_type");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_name");

                    b.HasKey("Id")
                        .HasName("pk_contractors");

                    b.HasIndex("ContractorType")
                        .HasDatabaseName("ix_contractors_contractor_type");

                    b.ToTable("contractors", (string)null);
                });

            modelBuilder.Entity("Arceus.Domain.Entities.JournalEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("credit");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("debit");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id")
                        .HasName("pk_journal_entries");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_journal_entries_account_id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_journal_entries_created_at");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("ix_journal_entries_transaction_id");

                    b.ToTable("journal_entries", (string)null);
                });

            modelBuilder.Entity("Arceus.Domain.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_transactions_created_at");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_transactions_order_id");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("Arceus.Domain.Entities.Account", b =>
                {
                    b.HasOne("Arceus.Domain.Entities.Contractor", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_accounts_contractors_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Arceus.Domain.Entities.JournalEntry", b =>
                {
                    b.HasOne("Arceus.Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_journal_entries_accounts_account_id");

                    b.HasOne("Arceus.Domain.Entities.Transaction", "Transaction")
                        .WithMany("JournalEntries")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_journal_entries_transactions_transaction_id");

                    b.Navigation("Account");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Arceus.Domain.Entities.Contractor", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Arceus.Domain.Entities.Transaction", b =>
                {
                    b.Navigation("JournalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
